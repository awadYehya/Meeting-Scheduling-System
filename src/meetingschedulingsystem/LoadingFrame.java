/*
 * Copyright (C) 2015 Yehya Awad
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package meetingschedulingsystem;

import java.util.Random;

/**
 *
 * @author yha5009
 */

public class LoadingFrame extends javax.swing.JFrame {

    private String [] loadingmessages;
    private int loadspeed = 60;
    private final int loadmessagefactor = 25;
    
    /**
     * Creates new form LoadingFrame
     */
    public LoadingFrame() {
        this.setLocationByPlatform(true);
        this.setVisible(true);
        this.setResizable(false);
        initComponents();
        initLoadingMessages();
        load();
        this.dispose();
    }
    
    private void initLoadingMessages() {
        String [] tempLoadingMessage = {
            "Loading...",
            "This student deserves 100% for this assignment.",
            "Loading...",
            "Loading...",
            "Almost there..."
        };
        this.loadingmessages = tempLoadingMessage;
    }
    
    private void load() {
        loadingBar.setMaximum(100);
        loadingBar.setMinimum(0);
        this.setVisible(true);
        int loadingPercent = 0;
        while (loadingBar.getValue() < 100) {
            try {
                Thread.sleep(loadspeed);
            } catch (InterruptedException e) {
                return;
            }
            if (loadingPercent%loadmessagefactor == 0) {
                Random rand = new Random();
                int randomMessageIndex = rand.nextInt(100)%(loadingmessages.length-1);
                System.out.println(randomMessageIndex);
                loadingLabelMessage.setText(loadingmessages[randomMessageIndex]);
            }
//            if (loadingPercent >= 90) {
//                loadingLabelMessage.setText(loadingmessages[loadingmessages.length-1]);
//                loadspeed = (loadingPercent-90)*200;
//            }
//            if (loadingPercent == 99) {
//                try {
//                    Thread.sleep(10000);
//                } catch (InterruptedException e) {
//                    return;
//                }
//            }
//            if (loadingPercent == 100) {
//                loadingLabelMessage.setText("ERRORRRRRRRRRRR!!");
//                try {
//                    Thread.sleep(50000);
//                } catch (InterruptedException e) {
//                    return;
//                }
//                return;
//            }
            loadingBar.setValue(loadingPercent++);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        loadingLabelMessage = new javax.swing.JLabel();
        loadingBar = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        loadingLabelMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        loadingLabelMessage.setText("Loading...");
        loadingLabelMessage.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(loadingLabelMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(loadingBar, javax.swing.GroupLayout.DEFAULT_SIZE, 529, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(loadingLabelMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(loadingBar, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoadingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoadingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoadingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoadingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoadingFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar loadingBar;
    private javax.swing.JLabel loadingLabelMessage;
    // End of variables declaration//GEN-END:variables
}
